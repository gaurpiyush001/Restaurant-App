{"version":3,"sources":["components/components/Cart/Checkout.module.css","components/components/Cart/Cart.module.css","components/components/Cart/CartItem.module.css","components/components/Layout/HeaderCartButton.module.css","components/components/Meals/AvailableMeals.module.css","components/components/Meals/MealItem/MealItem.module.css","components/components/Layout/Header.module.css","components/components/UI/Modal.module.css","components/components/Meals/MealsSummary.module.css","components/components/UI/Card.module.css","components/components/Meals/MealItem/MealItemForm.module.css","components/components/UI/Input.module.css","assets/meals.jpg","components/components/Cart/CartIcon.js","store/cart-context.js","components/components/Layout/HeaderCartButton.js","components/components/Layout/Header.js","components/components/Meals/MealsSummary.js","components/components/UI/Card.js","components/components/UI/Input.js","components/components/Meals/MealItem/MealItemForm.js","components/components/Meals/MealItem/MealItem.js","components/components/Meals/AvailableMeals.js","components/components/Meals/Meals.js","components/components/UI/Modal.js","components/components/Cart/CartItem.js","components/components/Cart/Checkout.js","components/components/Cart/Cart.js","store/CartProvider.js","App.js","index.js"],"names":["module","exports","CartIcon","xmlns","viewBox","fill","d","CartContext","React","createContext","items","totalAmount","addItem","item","removeItem","id","clearCart","HeaderCartButton","props","useState","btnIsHighlighted","setBtnIsHighlighted","cartCtx","useContext","numberOfCartItems","reduce","acc","amount","btnClasses","classes","button","bump","useEffect","length","timer","setTimeout","clearTimeout","onClick","onShowCartHeader","className","icon","badge","Header","header","onShowCart","src","mealsImage","alt","MealsSummary","summary","Card","card","children","Input","forwardRef","ref","input","htmlFor","label","MealItemForm","amountIsValid","setAmountIsValid","amountInputRef","useRef","onSubmit","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","onAddToCart","console","log","form","type","min","max","step","defaultValue","MealItem","price","toFixed","meal","name","description","AvailableMeals","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","a","fetch","response","ok","Error","json","key","responseData","loadedMeals","push","catch","err","message","MealsLoading","MealsError","mealsList","map","Meals","Backdrop","backdrop","onBackdropClose","ModalOverlay","modal","portalElement","document","getElementById","Modal","ReactDOM","createPortal","CartItem","heading","actions","onRemove","onAdd","isEmpty","Checkout","street","city","pin","formInputsValidity","setFormInputsValidity","nameInputRef","cityInputRef","pinInputRef","streetInputRef","enteredName","enteredStreet","enteredPin","enteredCity","enteredNameIsInvalid","enteredStreetIsInvalid","enteredCityIsInvalid","enteredPinIsInvalid","onConfirm","control","invalid","onCancel","submit","Cart","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","isCheckOut","setIsCheckOut","hasItems","cartItemRemoveHandler","cartItemAddHandler","submitOrderHandler","userData","method","body","JSON","stringify","user","orderedItems","cartItems","bind","cartModalContent","Fragment","total","onClose","isSubmittingModelContent","didSubmitModalContent","defaultCartState","cartReducer","state","action","updatedItems","updatedItem","updatedTotalAmount","existingCartItemIndex","findIndex","existingCartItem","concat","existingItem","filter","CartProvider","useReducer","cartState","dispatchCartAction","cartContext","Provider","App","CartIsShown","setCartIsShown","render"],"mappings":"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","file":"static/js/main.56c709be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Checkout_form__2sKoA\",\"control\":\"Checkout_control__3RBvS\",\"actions\":\"Checkout_actions__2se1H\",\"submit\":\"Checkout_submit__1AU2c\",\"invalid\":\"Checkout_invalid__1LRto\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-items\":\"Cart_cart-items__2zdWT\",\"total\":\"Cart_total__20IHE\",\"actions\":\"Cart_actions__3_Pne\",\"button--alt\":\"Cart_button--alt__21DI7\",\"button\":\"Cart_button__35_Ol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cart-item\":\"CartItem_cart-item__1026K\",\"heading\":\"CartItem_heading__2R50V\",\"summary\":\"CartItem_summary__UMs5P\",\"price\":\"CartItem_price__1myeG\",\"amount\":\"CartItem_amount__37JqJ\",\"actions\":\"CartItem_actions__3-5k0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"HeaderCartButton_button__IWgJY\",\"icon\":\"HeaderCartButton_icon__4dTK7\",\"badge\":\"HeaderCartButton_badge__240o7\",\"bump\":\"HeaderCartButton_bump__QX7Tq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meals\":\"AvailableMeals_meals__3FaHK\",\"meals-appear\":\"AvailableMeals_meals-appear__c3aSd\",\"MealsLoading\":\"AvailableMeals_MealsLoading__1Ezh9\",\"MealsError\":\"AvailableMeals_MealsError__n9jy5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"meal\":\"MealItem_meal__3VSyA\",\"description\":\"MealItem_description__hreQh\",\"price\":\"MealItem_price__1aWnk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3nE8W\",\"main-image\":\"Header_main-image__1mTk5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1wGit\",\"modal\":\"Modal_modal__19Fzt\",\"slide-down\":\"Modal_slide-down__3UQu2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"summary\":\"MealsSummary_summary__1Wjcl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1jLPm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"MealItemForm_form__2k9L7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__WhXKU\"};","export default __webpack_public_path__ + \"static/media/meals.2971f633.jpg\";","const CartIcon = () => {\r\n    return (\r\n      <svg\r\n        xmlns='http://www.w3.org/2000/svg'\r\n        viewBox='0 0 20 20'\r\n        fill='currentColor'\r\n      >\r\n        <path d='M3 1a1 1 0 000 2h1.22l.305 1.222a.997.997 0 00.01.042l1.358 5.43-.893.892C3.74 11.846 4.632 14 6.414 14H15a1 1 0 000-2H6.414l1-1H14a1 1 0 00.894-.553l3-6A1 1 0 0017 3H6.28l-.31-1.243A1 1 0 005 1H3zM16 16.5a1.5 1.5 0 11-3 0 1.5 1.5 0 013 0zM6.5 18a1.5 1.5 0 100-3 1.5 1.5 0 000 3z' />\r\n      </svg>\r\n    );\r\n  };\r\n  \r\n  export default CartIcon;\r\n  ","import React from 'react';\r\n\r\nconst CartContext = React.createContext({\r\n    items:[],\r\n    totalAmount: 0,\r\n    addItem: (item) => {},\r\n    removeItem: (id) => {},\r\n    clearCart: () => {}\r\n});\r\n\r\nexport default CartContext;","import React from \"react\";\r\nimport classes from \"./HeaderCartButton.module.css\";\r\nimport CartIcon from \"../Cart/CartIcon\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport CartContext from \"../../../store/cart-context\";\r\n\r\nconst HeaderCartButton = (props) => {\r\n  const [btnIsHighlighted, setBtnIsHighlighted] = useState(false);\r\n  const cartCtx = useContext(CartContext); //By doing this Whenever the Context changes then the HeaderCartButton will get Re-Evaluated by React(here we are setting a connection)\r\n  \r\n  const { items } = cartCtx;\r\n\r\n  const numberOfCartItems = items.reduce((acc, item) => {\r\n    return acc + item.amount;\r\n  }, 0);\r\n\r\n\r\n\r\n  let btnClasses = `${classes.button} ${btnIsHighlighted ? classes.bump : \"\"}`;\r\n  //we will utilize useEffect to play this animation\r\n  //So, here I want my btnClasses to include the animation bump class and then I want to set a Timer which removes that class again, so that when it added again in future it plays animation\r\n  //So I will be using here useState also bcz I will be re-evaluating and re-Render the component, when that animation class is added conditionally\r\n\r\n  useEffect(() => {\r\n    if (cartCtx.items.length === 0) return;\r\n\r\n    setBtnIsHighlighted(true);\r\n\r\n    const timer = setTimeout(() => {\r\n      setBtnIsHighlighted(false);\r\n    }, 300);\r\n\r\n    //writing CLEAN-UP function(important hai aur god-practice hai to write cleanup function in useEffect)\r\n    return () => {\r\n      clearTimeout(timer);//we want this bcz if a new timer is fired before the last one finishes then we want to halt and clear that previous timer and start a new Timer\r\n    };\r\n\r\n\r\n  }, [items]);\r\n\r\n  return (\r\n    <button onClick={props.onShowCartHeader} className={btnClasses}>\r\n      <span className={classes.icon}>\r\n        <CartIcon />\r\n      </span>\r\n      <span>Your Cart</span>\r\n      <span className={classes.badge}>{numberOfCartItems}</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default HeaderCartButton;\r\n","import { Fragment } from \"react\";\r\n\r\n//Create React App --> Supports Importing Images Alsooo\r\nimport mealsImage from \"../../../assets/meals.jpg\";\r\nimport classes from \"./Header.module.css\";\r\nimport HeaderCartButton from \"./HeaderCartButton\";\r\n\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <header className={classes.header}>\r\n        <h1>CrispyCorner</h1>\r\n        <HeaderCartButton onShowCartHeader={props.onShowCart}/>\r\n      </header>\r\n      <div className={classes[\"main-image\"]}>\r\n        <img src={mealsImage} alt=\"A table full of delicious food!\"/>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import classes from './MealsSummary.module.css';\r\n\r\nconst MealsSummary = () => {\r\n  return (\r\n    <section className={classes.summary}>\r\n      <h2>Delicious Food, Delivered To You</h2>\r\n      <p>\r\n        Choose your favorite meal from our broad selection of available meals\r\n        and enjoy a delicious lunch or dinner at home.\r\n      </p>\r\n      <p>\r\n        All our meals are cooked with high-quality ingredients, just-in-time and\r\n        of course by experienced chefs!\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default MealsSummary;\r\n","///////////////////SUPER SIMPLE COMPONENT WHICH WILL WRAP THE OTHER COMPENENTS///////////////////\r\nimport classes from \"./Card.module.css\";\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className = {classes.card}>{props.children}</div>\r\n    );\r\n}\r\n\r\n\r\nexport default Card;","import classes from \"./Input.module.css\";\r\nimport React from \"react\";\r\n\r\n//In order to fix the ref issue realted to Custom Component, wrap the that component Function with React.forwardRef now Component function will recieve ref argument as well as props \r\nconst Input = React.forwardRef((props, ref) => {\r\n    return (\r\n        <div className={classes.input}>\r\n            <label htmlFor={props.input.id}>{props.label}</label>\r\n            <input ref={ref} {...props.input}/>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Input;","import classes from \"./MealItemForm.module.css\";\r\nimport Input from \"../../UI/Input\";\r\nimport { useRef, useState } from \"react\";\r\n\r\nconst MealItemForm = (props) => {\r\n  const [amountIsValid, setAmountIsValid] = useState(true);\r\n  const amountInputRef = useRef();\r\n\r\n  const submitHandler = event => {\r\n    event.preventDefault();\r\n\r\n    const enteredAmount = amountInputRef.current.value;\r\n    const enteredAmountNumber = +enteredAmount;\r\n\r\n    if(enteredAmount.trim().length === 0 || enteredAmountNumber < 0 || enteredAmountNumber > 7){\r\n      setAmountIsValid(false);\r\n      return;\r\n    }\r\n\r\n    props.onAddToCart(enteredAmount);\r\n    console.log(enteredAmount);\r\n    setAmountIsValid(true);\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={submitHandler} className={classes.form}>\r\n      <Input\r\n        ref={amountInputRef}/*This would not work as it is a Custom Component, to fix this go to compinent which recieves ref as prop*/\r\n        label=\"Amount\"\r\n        input={{\r\n          id: 'amount_' + props.id,\r\n          type: \"number\",\r\n          min: \"1\",\r\n          max: \"7\",\r\n          step: \"1\",\r\n          defaultValue: \"0\",\r\n        }}\r\n      />\r\n      <button>+ Add</button>\r\n      {!amountIsValid && <p>Please enter a valid amount (0-7).</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MealItemForm;\r\n","import classes from \"./MealItem.module.css\";\r\nimport MealItemForm from \"./MealItemForm\";\r\nimport { useContext } from \"react\";\r\nimport CartContext from \"../../../../store/cart-context\";\r\n\r\nconst MealItem = (props) => {\r\n  const cartCtx = useContext(CartContext);\r\n  const price = `Rs.${props.price.toFixed(2)}`;\r\n  const addToCartHandler = amount => {\r\n    cartCtx.addItem({\r\n      id: props.id,\r\n      name: props.name,////abhi CHANGE KRA\r\n      amount: +amount,\r\n      price: props.price,\r\n    });\r\n    //console.log()\r\n  };\r\n\r\n  return (\r\n    <li className={classes.meal}>\r\n      <div>\r\n        <h3>{props.name}</h3>\r\n        <div className={classes.description}>{props.description}</div>\r\n        <div className={classes.price}>{price}</div>\r\n      </div>\r\n      <div>\r\n          <MealItemForm id={props.id} onAddToCart={addToCartHandler}/>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default MealItem;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport classes from \"./AvailableMeals.module.css\";\r\nimport Card from \"../UI/Card\";\r\nimport MealItem from \"./MealItem/MealItem\";\r\n\r\n//Now, this hardcoded data would be fetched from firebase database\r\n/*\r\nconst DUMMY_MEALS = [\r\n  {\r\n    id: \"m1\",\r\n    name: \"Sushi\",\r\n    description: \"Finest fish and veggies\",\r\n    price: 22.99,\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    name: \"Schnitzel\",\r\n    description: \"A german specialty!\",\r\n    price: 16.5,\r\n  },\r\n  {\r\n    id: \"m3\",\r\n    name: \"Barbecue Burger\",\r\n    description: \"American, raw, meaty\",\r\n    price: 12.99,\r\n  },\r\n  {\r\n    id: \"m4\",\r\n    name: \"Green Bowl\",\r\n    description: \"Healthy...and green...\",\r\n    price: 18.99,\r\n  },\r\n];*/\r\n\r\nconst AvailableMeals = () => {\r\n\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [httpError, setHttpError] = useState();\r\n\r\n  useEffect( () => {\r\n    const fetchMeals = async () => {\r\n      //setIsLoading(true);\r\n      const response = await fetch('https://react-http-61968-default-rtdb.firebaseio.com/meals.json');\r\n\r\n      if(!response.ok) {//statusCode\r\n        throw new Error('Something went wrong!!');\r\n      }\r\n\r\n      const responseData = await response.json();//Response will be an object\r\n\r\n      const loadedMeals = [];\r\n\r\n      for (const key in responseData){\r\n        loadedMeals.push({\r\n          id: key,\r\n          name: responseData[key].name,\r\n          price: responseData[key].price,\r\n          description: responseData[key].description\r\n        })\r\n      }\r\n\r\n      setMeals(loadedMeals);\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchMeals().catch(err => {\r\n        setIsLoading(false);\r\n        setHttpError(err.message);\r\n    });\r\n\r\n  }, []);\r\n\r\n  if(isLoading){\r\n    return (\r\n      <section className={classes.MealsLoading}><p>Fetching Data</p></section>\r\n    )\r\n  }\r\n\r\n  if(httpError){\r\n    return (\r\n      <section className={classes.MealsError}>\r\n        <p>{httpError}</p>\r\n      </section>\r\n    )\r\n  }\r\n\r\n  //This is a helper constant\r\n  const mealsList = meals.map((meals) => (\r\n    <MealItem\r\n      id={meals.id}\r\n      key={meals.id}\r\n      name={meals.name}\r\n      description={meals.description}\r\n      price={meals.price}\r\n    />\r\n  ));\r\n\r\n  //console.log(mealsList);\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        {/* {DUMMY_MEALS.map((meals) => {\r\n          <MealItem\r\n            name={meals.name}\r\n            description={meals.description}\r\n            price={meals.price}\r\n            key={meals.id}\r\n          />;\r\n        })} */}\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;\r\n","import { Fragment } from \"react\"; // as a rapper component around this component content\r\nimport MealsSummary from \"./MealsSummary\";\r\nimport AvailableMeals from \"./AvailableMeals\";\r\n\r\nconst Meals = () => {\r\n  return (\r\n    <Fragment>\r\n      <MealsSummary />\r\n      <AvailableMeals />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Meals;\r\n","import classes from \"./Modal.module.css\";\r\nimport { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Backdrop = (props) => {\r\n  return (<div className={classes.backdrop} onClick={props.onBackdropClose}></div>);\r\n};\r\n\r\nconst ModalOverlay = (props) => {\r\n  return (\r\n    <div className={classes.modal}>\r\n      {/* <div className={classes.content}>{props.children}</div> */}\r\n      <div>{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst portalElement = document.getElementById(\"overlays\");\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <Fragment>\r\n      {ReactDOM.createPortal(<Backdrop onBackdropClose={props.onBackdropClose}/>, portalElement)}\r\n      {ReactDOM.createPortal(\r\n        <ModalOverlay>{props.children}</ModalOverlay>,\r\n        portalElement\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import classes from './CartItem.module.css';\r\n\r\nconst CartItem = (props) => {\r\n  const price = `Rs.${props.price.toFixed(2)}`;\r\n\r\n  return (\r\n    <li className={classes['cart-item']}>\r\n      <div>\r\n        <h2 className={classes.heading}>{props.name}</h2>\r\n        <div className={classes.summary}>\r\n          <span className={classes.price}>{price}</span>\r\n          <span className={classes.amount}>x {props.amount}</span>\r\n        </div>\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button onClick={props.onRemove}>−</button>\r\n        <button onClick={props.onAdd}>+</button>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","//Checkout form will only be Validated, Once the form is Submitted \r\nimport classes from \"./Checkout.module.css\";\r\nimport { useRef, useState } from 'react';\r\n\r\nconst isEmpty = value => value.trim() === '';\r\nconst isNotFiveChars = value => value.trim().length < 5;\r\n\r\nconst Checkout = (props) => {\r\n  \r\n  const [formInputsValidity, setFormInputsValidity] = useState({\r\n    name: true,\r\n    street: true,\r\n    city: true,\r\n    pin: true\r\n  });\r\n\r\n  const nameInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n  const pinInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    \r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value; \r\n    const enteredStreet = streetInputRef.current.value;\r\n    const enteredPin = pinInputRef.current.value;\r\n    const enteredCity = cityInputRef.current.value;\r\n\r\n    const enteredNameIsInvalid = isEmpty(enteredName);\r\n    const enteredStreetIsInvalid = isEmpty(enteredStreet);\r\n    const enteredCityIsInvalid = isEmpty(enteredCity);\r\n    const enteredPinIsInvalid = isEmpty(enteredPin);\r\n\r\n\r\n    setFormInputsValidity({\r\n        name: !enteredNameIsInvalid,\r\n        street: !enteredStreetIsInvalid,\r\n        city: !enteredCityIsInvalid,\r\n        pin: !enteredPinIsInvalid\r\n    })\r\n\r\n\r\n    if(enteredNameIsInvalid || enteredStreetIsInvalid || enteredCityIsInvalid || enteredPinIsInvalid){\r\n        //show the error\r\n        return;\r\n    }\r\n\r\n    //Submit User data\r\n    props.onConfirm({\r\n        name: enteredName,\r\n        street: enteredStreet,\r\n        city: enteredCity,\r\n        pin: enteredPin\r\n    });\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={confirmHandler} className={classes.form}>\r\n      <div className={`${classes.control} ${formInputsValidity.name ? '': classes.invalid}`}>\r\n        <label htmlFor=\"name\">Your Name</label>\r\n        <input type=\"text\" id=\"name\" ref={nameInputRef} />\r\n        {!formInputsValidity.name && <p>Please enter a valid name</p>}\r\n      </div>\r\n      <div className={`${classes.control} ${formInputsValidity.street ? '': classes.invalid}`}>\r\n        <label htmlFor=\"street\">Street</label>\r\n        <input type=\"text\" id=\"street\" ref={streetInputRef}/>\r\n        {!formInputsValidity.street && <p>Please enter a valid Street name</p>}\r\n      </div>\r\n      <div className={`${classes.control} ${formInputsValidity.pin ? '': classes.invalid}`}>\r\n        <label htmlFor=\"pin\">Pincode</label>\r\n        <input type=\"text\" id=\"pin\" ref={pinInputRef}/>\r\n        {!formInputsValidity.pin && <p>Please enter a valid PinCode</p>}\r\n      </div>\r\n      <div className={`${classes.control} ${formInputsValidity.city ? '': classes.invalid}`}>\r\n        <label htmlFor=\"city\">City</label>\r\n        <input type=\"text\" id=\"city\" ref={cityInputRef}/>\r\n        {!formInputsValidity.city && <p>Please enter a valid City Name</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","import classes from \"./Cart.module.css\";\r\nimport Modal from \"../UI/Modal\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport CartContext from \"../../../store/cart-context\"; //importing the context Object\r\nimport CartItem from \"./CartItem\";\r\nimport Checkout from \"./Checkout\";\r\n\r\nconst Cart = (props) => {\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [didSubmit, setDidSubmit] = useState(false);\r\n  const [isCheckOut, setIsCheckOut] = useState(false);\r\n  const cartCtx = useContext(CartContext); //Building a connection so that this component is refreshed whenever CartContext have a change\r\n\r\n  const totalAmount = `Rs. ${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.items.length > 0;\r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n\r\n  const cartItemAddHandler = (item) => {\r\n    cartCtx.addItem({ ...item, amount: 1 });\r\n  };\r\n\r\n  const orderHandler = () => {\r\n    setIsCheckOut(true);\r\n  };\r\n\r\n  const submitOrderHandler = async (userData) => {\r\n    setIsSubmitting(true);\r\n    //Sending request to the Backend --->this would be a post request\r\n    await fetch(\r\n      \"https://react-http-61968-default-rtdb.firebaseio.com/order.json\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          user: userData,\r\n          orderedItems: cartCtx.items,\r\n        }),\r\n      }\r\n    );\r\n\r\n    setIsSubmitting(false);\r\n    setDidSubmit(true);\r\n    cartCtx.clearCart();\r\n  };\r\n\r\n  const cartItems = (\r\n    <ul className={classes[\"cart-items\"]}>\r\n      {cartCtx.items.map((item) => (\r\n        <CartItem\r\n          key={item.id}\r\n          name={item.name}\r\n          amount={item.amount}\r\n          price={item.price}\r\n          onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n          onAdd={cartItemAddHandler.bind(null, item)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n\r\n  const cartModalContent = (\r\n    <React.Fragment>\r\n      {cartItems}\r\n      <div className={classes.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {isCheckOut && (\r\n        <Checkout onConfirm={submitOrderHandler} onCancel={props.onClose} />\r\n      )}\r\n      {!isCheckOut && (\r\n        <div className={classes.actions}>\r\n          <button className={classes[\"button--alt\"]} onClick={props.onClose}>\r\n            Close\r\n          </button>\r\n          {hasItems && (\r\n            <button className={classes.button} onClick={orderHandler}>\r\n              Order\r\n            </button>\r\n          )}\r\n        </div>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n\r\n  const isSubmittingModelContent = <p>Sending order data...</p>;\r\n\r\n  const didSubmitModalContent = (<React.Fragment>\r\n    <p>Successfully sent the order!</p>\r\n    <div className={classes.actions}>\r\n      <button className={classes['button--alt']} onClick={props.onClose}>\r\n        Close\r\n      </button>\r\n    </div>\r\n  </React.Fragment>\r\n  );\r\n   \r\n\r\n  return <Modal onBackdropClose={props.onClose}>\r\n    {!isSubmitting && !didSubmit && cartModalContent}\r\n    {isSubmitting && isSubmittingModelContent}\r\n    {!isSubmitting && didSubmit && didSubmitModalContent}\r\n  </Modal>;\r\n};\r\n\r\nexport default Cart;\r\n","//...GOAL of this component is to simply MANAGE the CARD-CONTEXT-DATA and provide the context to all components that want ACCESS to it....//\r\nimport CartContext from \"./cart-context\";\r\nimport { useReducer } from \"react\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\n//this function is said to change or maintain state dynamically\r\n//below function is called whenever there is an action from dispatch function\r\n//below function recieves automatically the current State and action(which is generally an Object) action is dispatched by programmer from dispatch function in order to call cartReducer\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n    console.log(existingCartItemIndex, existingCartItem);\r\n    let updatedItems;\r\n\r\n    if (existingCartItem && existingCartItemIndex != -1) {\r\n      let updatedItem;\r\n      updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.item.amount,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.items.concat(action.item); //concat will return a newArray\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"REMOVE\") {\r\n    \r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.id\r\n    );\r\n\r\n    const existingItem = state.items[existingCartItemIndex];\r\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n\r\n    let updatedItems;\r\n\r\n    if (existingItem.amount === 1) { //Here we wanna completely remove the item from the array\r\n      updatedItems = state.items.filter( item => item.id !== action.id);\r\n    }else{ //Here we want to just decrease the amount\r\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1};\r\n\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    }\r\n\r\n  }\r\n\r\n  if(action.type === 'CLEAR') {//clearing cart after successfully ordering food items\r\n    return defaultCartState;\r\n  }\r\n\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    //below function we are passing action, by which we can run different pieces of code depending on which Action Type was Dispatched\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", id: id });\r\n  };\r\n\r\n  const clearCartHandler = () => {\r\n    dispatchCartAction({type:'CLEAR'});\r\n  }\r\n\r\n  //below object will be dynamic\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n    clearCart: clearCartHandler\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n//we can now use this cart Provider component i.e CardContext to wrap all components that need access to the cart\r\n","import React from 'react';\r\nimport Header from './components/components/Layout/Header';\r\nimport Meals from './components/components/Meals/Meals';\r\nimport Cart from './components/components/Cart/Cart';\r\nimport {useState} from 'react'; //Parent component mein render krayenegy Cart toh uski state bhi yehi manage hongi\r\nimport CartProvider from './store/CartProvider';\r\n\r\nfunction App() {\r\n\r\n  const [CartIsShown, setCartIsShown] = useState(false);\r\n\r\n  const showCartHandler = () => {\r\n    setCartIsShown(true);\r\n  };\r\n\r\n  const hideCartHandler = () => {\r\n    setCartIsShown(false);\r\n  };\r\n\r\n  return (\r\n    <CartProvider>\r\n      {CartIsShown && <Cart onClose={hideCartHandler} />}\r\n      <Header onShowCart={showCartHandler} />\r\n      <main>\r\n        <Meals />\r\n      </main>\r\n    </CartProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}